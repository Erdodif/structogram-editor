@import "../variables";
@import "../mixins";

@mixin if_indicator_border{
    background: $color_statement_border;
    bottom: -$border_width;
    max-height: 4.795em;
    height: calc(100% + $border_width);
    width: $border_width;
}

@mixin if_indicator_false($content: " ") {
    & > .indicator-holder {
        background-color: transparent;
        position: absolute;
        inset: calc($border_width / -2) calc($border_width / -4) calc($border_width / -2) calc($border_width / -4);
        &::after {
            @include render_pseudo($content);
            background-color: transparent;
            right: 0;
            bottom: 0;
            width: 1.75ch;
        }
    }
    &::after {
        @include render_pseudo(" ");
        @include if_indicator_border();
        right: 1.65ch;
        transform: skewX(-25deg);
    }
}

@mixin if_indicator_true($content: " ") {
    & > .indicator-holder {
        background-color: transparent;
        position: absolute;
        inset: calc($border_width / -2) calc($border_width / -4) calc($border_width / -2) calc($border_width / -4);
        &::before {
            @include render_pseudo($content);
            background-color: transparent;
            left: 0;
            bottom: 0;
            width: 1.75ch;
        }
    }
    &::before {
        @include render_pseudo(" ");
        @include if_indicator_border();
        left: 1.65ch;
        transform: skewX(25deg);
    }
}

@mixin statement_if {
    width: calc(100% + $border_width * 2);
    position: relative;
    max-width: unset;
    display: grid;
    grid-template-rows: auto auto;
    grid-template-areas: "head" "body";
    & > .content {
        border-block-end: $border;
        margin-block-end: 0;
        padding-inline: 3.2ch;
        position: relative;
        grid-area: head;
        @include if_indicator_true("I");
        @include if_indicator_false("H");
    }
    & > .statement-blocks {
        grid-area: body;
        display: grid;
        grid-template-rows: 1fr;
        grid-template-columns: auto auto;
        grid-template-areas: "true false";
        justify-items: stretch;
        align-items: stretch;
        margin-block-end: $border_width;
        & > .if-false,
        > .if-true {
            height: 100%;
            max-width: $statement_max_width;
            min-width: 1.655em;
            width: calc(100% + $border_width);
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            align-items: stretch;
            align-content: stretch;
            justify-content: flex-start;
            & > .statement {
                height: calc(100% + $border_width * 5);
            }
            & > .statement:last-child {
                margin-block-end: calc($border_width * -2);
            }
        }

        & > .if-true {
            grid-area: true;
        }
        & > .if-false {
            margin-inline-end: calc($border_width * -1);
            grid-area: false;
            & > .statement {
                margin-inline-start: 0;
                width: 100%;
            }
        }
    }
}

@mixin statement_switch {
    max-width: unset;
    & > .case-blocks {
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: stretch;
        & > .case {
            &:hover {
                background: $color_statement_bg_highlight;
            }
            margin-block-end: -$border_width;
            &:last-child {
                margin-inline-end: -$border_width;
            }
            min-width: $statement_min_width;
            width: calc(100% + $border_width * 2);
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: max-content auto;
            grid-template-areas: "case" "statements";
            align-self: stretch;
            & > .switch-else,
            & > .switch-case {
                margin-block-start: -$border_width;
                margin-inline-start: -$border_width;
                border: $border;
                grid-area: case;
            }
            /* & > .switch-case::before {
                    @include if_indicator_true;
                }*/
            & > .switch-else {
                color: transparent;
                user-select: none;
                /* &::before {
                        color: $color_statement_text;
                        @include if_indicator_false("H");
                    }*/
            }
            & > .switch-statements {
                grid-area: statements;
                margin-inline-end: $border_width;
                display: flex;
                min-height: 100%;
                flex-direction: column;
                flex-wrap: nowrap;
                align-items: stretch;
                margin-block-end: -$border_width;

                & > :last-child {
                    margin-block-end: $border_width;
                }
                & > .statement {
                    height: 100%;
                }
            }
        }
    }
}
